<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">


    <bean id="dataSourceRiskCore" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${riskcore.db.url}" />
        <property name="username" value="${riskcore.db.username}" />
        <property name="password" value="${riskcore.db.password}" />
        <property name="initialSize" value="${riskcore.db.initialSize}" />
        <property name="minIdle" value="${riskcore.db.minIdle}" />
        <property name="maxActive" value="${riskcore.db.maxActive}" />
        <property name="maxWait" value="${riskcore.db.maxWait}" />
        <!--配置一个连接在池中最小生存的时间，单位是毫秒 -->
       <property name="minEvictableIdleTimeMillis" value="${riskcore.db.minEvictableIdleTimeMillis}" />
        <!--打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${riskcore.db.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${riskcore.db.maxPoolPreparedStatementPerConnectionSize}" />
    </bean>

    <bean id="dataSourceRiskGateway" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" primary="true">
        <property name="url" value="${riskgateway.db.url}" />
        <property name="username" value="${riskgateway.db.username}" />
        <property name="password" value="${riskgateway.db.password}" />
        <property name="initialSize" value="${riskgateway.db.initialSize}" />
        <property name="minIdle" value="${riskgateway.db.minIdle}" />
        <property name="maxActive" value="${riskgateway.db.maxActive}" />
        <property name="maxWait" value="${riskgateway.db.maxWait}" />
        <!--配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${riskgateway.db.minEvictableIdleTimeMillis}" />
        <!--打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${riskgateway.db.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${riskgateway.db.maxPoolPreparedStatementPerConnectionSize}" />
        <property name="filters" value="config" />
        <property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${riskgateway.db.publickey}"/>
    </bean>
    <bean id="transactionManagerRiskCore" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" primary="true">
        <property name="dataSource" ref="dataSourceRiskCore"/>
    </bean>
    <bean id="transactionManagerRiskGateway" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" primary="true">
        <property name="dataSource" ref="dataSourceRiskGateway"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManagerRiskCore" proxy-target-class="true"/>
    <tx:annotation-driven transaction-manager="transactionManagerRiskGateway" proxy-target-class="true"/>

    <bean id="sqlSessionFactoryRiskCore" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRiskCore"/>
        <property name="mapperLocations" value="classpath:sqlmap/riskcore/**/*.xml"></property>
    </bean>

    <bean id="riskCoreMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryRiskCore"/>
        <property name="basePackage" value="com.yylc.risk.gateway.business.dao.mapper.riskcore"/>
    </bean>

    <bean id="sqlSessionFactoryRiskGateway" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRiskGateway"/>
        <property name="mapperLocations" value="classpath:sqlmap/riskgateway/**/*.xml"></property>
    </bean>

    <bean id="riskGatewayMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryRiskGateway"/>
        <property name="basePackage" value="com.yylc.risk.gateway.business.dao.mapper.riskgateway"/>
    </bean>
</beans>